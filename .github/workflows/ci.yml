name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

# Cancel in-progress runs for the same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================
  # Type Check
  # ============================================
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

  # ============================================
  # Lint (if you add linting later)
  # ============================================
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  # ============================================
  # Test on Multiple Node Versions
  # ============================================
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Generate coverage report
        if: matrix.node-version == 20
        run: npm run test:coverage -- --run

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # ============================================
  # Build
  # ============================================
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check build output
        run: |
          ls -la dist/
          test -f dist/src/index.js || exit 1
          test -f dist/src/index.cjs || exit 1
          test -f dist/src/index.d.ts || exit 1
          test -f dist/cli/index.js || exit 1
          test -f dist/cli/index.cjs || exit 1
          test -f dist/cli/index.d.ts || exit 1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # ============================================
  # Package Size Check
  # ============================================
  size-check:
    name: Package Size Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Check package size
        run: |
          npm pack
          SIZE=$(wc -c < *.tgz)
          echo "Package size: $(($SIZE / 1024 / 1024)) MB"
          # Fail if package is larger than 20MB (adjust as needed)
          if [ $SIZE -gt 20971520 ]; then
            echo "❌ Package size exceeds 20MB limit!"
            exit 1
          fi
          echo "✅ Package size is acceptable"

  # ============================================
  # Publish to npm (only on release tags)
  # ============================================
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [typecheck, test, build]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            *.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
